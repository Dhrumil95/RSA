/*
Utilized in RSA
Creates the private and public key.
Also checks if the entered numbers are prime or not.
Authors : Dhrumil Patel, Kena Patel
*/

import org.xml.sax.SAXException;

import javax.swing.*;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import java.io.IOException;
import java.math.BigInteger;


class KeyCreation extends javax.swing.JPanel {

    private javax.swing.JButton create;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField p;
    private javax.swing.JTextField q;
    /**
     * Creates new form KeyCreation
     */
    public KeyCreation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        p = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        q = new javax.swing.JTextField();
        create = new javax.swing.JButton();

        p.setText("-1");


        jLabel1.setText("Enter 1st prime here (-1 for random prime)");

        jLabel2.setText("Enter 2nd prime here (-1 for random prime)");

        q.setText("-1");

        create.setText("Create");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    createActionPerformed(evt);
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Some error occurred during key generation. Please try again.");

                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel1)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel2)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(168, 168, 168)
                                                .addComponent(create)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addComponent(create)
                                .addContainerGap(124, Short.MAX_VALUE))
        );
    }// </editor-fold>

    private void createActionPerformed(java.awt.event.ActionEvent evt) throws SAXException, TransformerException, ParserConfigurationException, IOException {

        LargeInteger p1 = new LargeInteger(p.getText());
        if (LargeInteger.compare(p1, new LargeInteger(-1)) == 0) {
            p1 = RSA.random_prime(50);
        }
        if (!new BigInteger(p1.toString()).isProbablePrime(10)) {
            JOptionPane.showMessageDialog(null, p1 + " is not prime. Please try again");
        }

        LargeInteger q1 = new LargeInteger(q.getText());
        if (LargeInteger.compare(q1, new LargeInteger(-1)) == 0) {
            q1 = RSA.random_prime(50);
        }
        if (!new BigInteger(q1.toString()).isProbablePrime(10)) {
            JOptionPane.showMessageDialog(null, q1 + " is not prime. Please try again");
        }
        RSA.Key key = RSA.generateKeys(p1, q1);
        String name = JOptionPane.showInputDialog("Please enter private key name: ");

        RSA.saveKeys(name, new RSA.Key(key.e, new LargeInteger(-1), key.n));
        name = JOptionPane.showInputDialog("Please enter public key name: ");
        RSA.saveKeys(name, new RSA.Key(new LargeInteger(-1), key.d, key.n));

        JOptionPane.showMessageDialog(null, "Successfully created keys!");
    }
}
